{"version":3,"sources":["components/Note.js","services/notes.js","components/Footer.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","content","className","Button","size","variant","color","onClick","baseUrl","request","axios","get","nonExisting","id","date","then","response","data","concat","newObject","post","put","Footer","style","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","i","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"qMAwBeA,G,MApBF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACfC,EAAQF,EAAKG,UAAY,qBAAuB,iBAEtD,OACC,+BACEH,EAAKI,QACN,sBAAMC,UAAU,gBAAhB,SACC,cAACC,EAAA,EAAD,CACCC,KAAK,QACLC,QAAQ,YACRC,MAAM,UACNC,QAAST,EAJV,SAMEC,W,gBChBAS,EAAU,aAuBD,EArBA,WACd,IAAMC,EAAUC,IAAMC,IAAIH,GACpBI,EAAc,CACnBC,GAAI,IACJZ,QAAS,mCACTa,KAAM,2BACNd,WAAW,GAEZ,OAAOS,EAAQM,MAAK,SAACC,GAAD,OAAcA,EAASC,KAAKC,OAAON,OAazC,EAVA,SAACO,GAEf,OADgBT,IAAMU,KAAKZ,EAASW,GACrBJ,MAAK,SAACC,GAAD,OAAcA,EAASC,SAQ7B,EALA,SAACJ,EAAIM,GAEnB,OADgBT,IAAMW,IAAN,UAAab,EAAb,YAAwBK,GAAMM,GAC/BJ,MAAK,SAACC,GAAD,OAAcA,EAASC,SCL7BK,EAhBA,WAMd,OACC,sBAAKC,MANc,CACnBjB,MAAO,QACPkB,UAAW,SACXC,SAAU,IAGV,UACC,uBACA,2GC2FYC,EA5FH,WAAO,IAAD,EACSC,mBAAS,IADlB,mBACVC,EADU,KACHC,EADG,OAEaF,mBAAS,IAFtB,mBAEVG,EAFU,KAEDC,EAFC,OAGaJ,oBAAS,GAHtB,mBAGVK,EAHU,KAGDC,EAHC,OAIuBN,mBAAS,uBAJhC,mBAIIO,GAJJ,WAMjBC,qBAAU,WACTC,IAEErB,MAAK,SAACsB,GACNR,EAASQ,QAET,IAEH,IAkDMC,EAAcN,EAAUJ,EAAQA,EAAMW,QAAO,SAAC1C,GAAD,OAAUA,EAAKG,aAElE,OACC,sBAAKE,UAAU,YAAf,UACC,uCACA,8BACC,yBAAQK,QAAS,kBAAM0B,GAAYD,IAAnC,kBACOA,EAAU,YAAc,WAGhC,+BACEM,EAAYE,KAAI,SAAC3C,EAAM4C,GAAP,OAChB,cAAC,EAAD,CAEC5C,KAAMA,EACNC,iBAAkB,kBAjEI,SAACe,GAC3B,IAAMhB,EAAO+B,EAAMc,MAAK,SAACC,GAAD,OAAOA,EAAE9B,KAAOA,KAClC+B,EAAW,2BAAQ/C,GAAR,IAAcG,WAAYH,EAAKG,YAEhDoC,EACSvB,EAAI+B,GACX7B,MAAK,SAAC8B,GACNhB,EAASD,EAAMY,KAAI,SAAC3C,GAAD,OAAWA,EAAKgB,KAAOA,EAAKhB,EAAOgD,SAEtDC,OAAM,SAACC,GACPb,EAAgB,SAAD,OACLrC,EAAKI,QADA,sCAGf+C,YAAW,WACVd,EAAgB,QACd,QAkDuBe,CAAmBpD,EAAKgB,MAF3C4B,MAKP,uBAAMS,SAjDO,SAACC,GAChBA,EAAMC,iBACN,IAAMC,EAAa,CAClBpD,QAAS6B,EACThB,MAAM,IAAIwC,MAAOC,cACjBvD,UAAWwD,KAAKC,SAAW,IAG5BrB,EACSiB,GACPtC,MAAK,SAAC8B,GACNhB,EAASD,EAAMV,OAAO2B,IACtBd,EAAW,QAqCX,UACC,uBAAO2B,MAAO5B,EAAS6B,SAvBF,SAACR,GACzBpB,EAAWoB,EAAMS,OAAOF,UAuBrB,wBAAQG,KAAK,SAAb,wBAGF,cAAC,EAAD,QC5FHC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.417a611c.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport '../app.css';\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n\tconst label = note.important ? 'make not important' : 'make important';\r\n\r\n\treturn (\r\n\t\t<li>\r\n\t\t\t{note.content}\r\n\t\t\t<span className=\"makeImportant\">\r\n\t\t\t\t<Button\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\tonClick={toggleImportance}\r\n\t\t\t\t>\r\n\t\t\t\t\t{label}\r\n\t\t\t\t</Button>\r\n\t\t\t</span>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport default Note;\r\n","import axios from 'axios';\r\nconst baseUrl = '/api/notes';\r\n\r\nconst getAll = () => {\r\n\tconst request = axios.get(baseUrl);\r\n\tconst nonExisting = {\r\n\t\tid: 10000,\r\n\t\tcontent: 'This note is not saved to server',\r\n\t\tdate: '2019-05-30T17:30:31.098Z',\r\n\t\timportant: true,\r\n\t};\r\n\treturn request.then((response) => response.data.concat(nonExisting));\r\n};\r\n\r\nconst create = (newObject) => {\r\n\tconst request = axios.post(baseUrl, newObject);\r\n\treturn request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n\tconst request = axios.put(`${baseUrl}/${id}`, newObject);\r\n\treturn request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n\tgetAll,\r\n\tcreate,\r\n\tupdate,\r\n};\r\n","const Footer = () => {\r\n\tconst footerStyle = {\r\n\t\tcolor: 'green',\r\n\t\tfontStyle: 'italic',\r\n\t\tfontSize: 16,\r\n\t};\r\n\treturn (\r\n\t\t<div style={footerStyle}>\r\n\t\t\t<br />\r\n\t\t\t<em>\r\n\t\t\t\tNote app, Department of Computer Science, University of Helsinki 2021\r\n\t\t\t</em>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport Note from './components/Note';\r\nimport { useState, useEffect } from 'react';\r\nimport noteService from './services/notes';\r\nimport './app.css';\r\nimport { Notification } from './components/Notification';\r\nimport Footer from './components/Footer';\r\n\r\nconst App = () => {\r\n\tconst [notes, setNotes] = useState([]);\r\n\tconst [newNote, setNewNote] = useState('');\r\n\tconst [showAll, setShowAll] = useState(false);\r\n\tconst [errorMessage, setErrorMessage] = useState('some error happened');\r\n\r\n\tuseEffect(() => {\r\n\t\tnoteService //\r\n\t\t\t.getAll()\r\n\t\t\t.then((initialNotes) => {\r\n\t\t\t\tsetNotes(initialNotes);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\tconst toggleImportanceOf = (id) => {\r\n\t\tconst note = notes.find((n) => n.id === id);\r\n\t\tconst changedNote = { ...note, important: !note.important };\r\n\r\n\t\tnoteService //\r\n\t\t\t.update(id, changedNote)\r\n\t\t\t.then((returnedNote) => {\r\n\t\t\t\tsetNotes(notes.map((note) => (note.id !== id ? note : returnedNote)));\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tsetErrorMessage(\r\n\t\t\t\t\t`Note '${note.content}' was already removed from server`\r\n\t\t\t\t);\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tsetErrorMessage(null);\r\n\t\t\t\t}, 5000);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst addNote = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst noteObject = {\r\n\t\t\tcontent: newNote,\r\n\t\t\tdate: new Date().toISOString(),\r\n\t\t\timportant: Math.random() < 0.5,\r\n\t\t};\r\n\r\n\t\tnoteService //\r\n\t\t\t.create(noteObject)\r\n\t\t\t.then((returnedNote) => {\r\n\t\t\t\tsetNotes(notes.concat(returnedNote));\r\n\t\t\t\tsetNewNote('');\r\n\t\t\t});\r\n\t};\r\n\r\n\t// const hook = () => {\r\n\t// \tconsole.log('effect');\r\n\t// \taxios.get('http://localhost:3001/notes').then((response) => {\r\n\t// \t\tconsole.log('promise fulfilled');\r\n\t// \t\tsetNotes(response.data);\r\n\t// \t});\r\n\t// };\r\n\r\n\t// useEffect(hook, []);\r\n\t// console.log('render', notes.length, 'notes');\r\n\r\n\tconst handleNoteChange = (event) => {\r\n\t\tsetNewNote(event.target.value);\r\n\t};\r\n\r\n\tconst notesToShow = showAll ? notes : notes.filter((note) => note.important);\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<h1>Notes</h1>\r\n\t\t\t<div>\r\n\t\t\t\t<button onClick={() => setShowAll(!showAll)}>\r\n\t\t\t\t\tshow {showAll ? 'important' : 'all'}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<ul>\r\n\t\t\t\t{notesToShow.map((note, i) => (\r\n\t\t\t\t\t<Note\r\n\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\tnote={note}\r\n\t\t\t\t\t\ttoggleImportance={() => toggleImportanceOf(note.id)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t\t<form onSubmit={addNote}>\r\n\t\t\t\t\t<input value={newNote} onChange={handleNoteChange} />\r\n\t\t\t\t\t<button type=\"submit\">save</button>\r\n\t\t\t\t</form>\r\n\t\t\t</ul>\r\n\t\t\t<Footer />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\nimport App from './App.js';\r\nimport React from 'react';\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}